#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

setup() {
  remove_coverage &&
    ./script/setup
}

teardown() {
  ./script/teardown
}

remove_coverage() {
  if [ -d coverage ]; then
    rm -rf coverage
  fi
}

run_unit_tests() {
  bundle exec rake spec:unit
}

run_isolation_tests() {
  local pwd=$PWD
  local root="$pwd/spec/isolation"

  run_tests $root
}

run_integration_tests() {
  local pwd=$PWD
  local root="$pwd/spec/integration"

  run_tests $root
}

run_tests() {
  local root=$1

  for test in $(find $root -name '*_spec.rb')
  do
    run_test $test

    if [ $? -ne 0 ]; then
      local exit_code=$?
      echo "Failing test: $test"
      exit $exit_code
    fi
  done
}

run_test() {
  local test=$1
  local hash="$(shasum "$test" | cut -b 1-40)"

  printf "\n\n\nRunning: $test\n"
  SIMPLECOV_COMMAND_NAME=$hash bundle exec rspec $test
}

upload_code_coverage() {
  bundle exec rake codecov:upload
}

main() {
  setup &&
    run_unit_tests &&
    run_isolation_tests &&
    run_integration_tests &&
    upload_code_coverage
}

trap teardown EXIT

main
